{"version":3,"sources":["webpack://_N_E/./pages/login.tsx","webpack://_N_E/./components/auth/InputField.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?576a","webpack://_N_E/./utils/validator.ts"],"names":["LoginPage","router","useRouter","authContext","useContext","AuthContext","apiContext","ApiContext","useState","email","setEmail","password","setPassword","loading","setLoading","error","setError","title","onSubmit","evt","preventDefault","isValidEmail","redirectTarget","window","location","search","login","axios","then","data","setAuthenticated","setAuth","startsWith","push","replace","e","ApiError","code","LoginStatus","INVALID_CREDS","EMAIL_NOT_CONFIRMED","message","handleSubmit","name","value","setValue","placeholder","type","text","padding","submit","href","InputField","id","toLowerCase","htmlFor","onChange","target","__NEXT_P","test","String","isValidString","string","max","length","isValidDate","date","element","split","parseInt","isValidPhone","phone","isEmpty","isValidFile","file","widget","format","pop","extensions","fileExtension","includes","fileExtensionText","reduce","accumulator","extension","i","Error","Math","ceil","size","maxFileSize"],"mappings":"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","file":"static/chunks/pages/login-9c4bbc516af0b4ac2765.js","sourcesContent":["import { useRouter } from \"next/dist/client/router\";\nimport { useContext, useState } from \"react\";\nimport Alert from \"../components/Alert\";\nimport AuthWrapper from \"../components/auth/AuthWrapper\";\nimport InputField from \"../components/auth/InputField\";\nimport FilledButton from \"../components/FilledButton\";\nimport { LoginStatus } from \"../interfaces/auth\";\nimport { ApiContext } from \"../utils/context/api\";\nimport { AuthContext } from \"../utils/context/auth\";\nimport { isValidEmail } from \"../utils/validator\";\nimport { ApiError } from \"interfaces/api\";\nimport { login } from \"api/auth\";\n\nconst LoginPage: React.FC = () => {\n  const router = useRouter();\n\n  const authContext = useContext(AuthContext);\n  const apiContext = useContext(ApiContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = () => {\n    setError(null);\n\n    if (!isValidEmail(email)) {\n      setError(\"Alamat email invalid\");\n      return;\n    }\n\n    setLoading(true);\n    const redirectTarget = window.location.search;\n\n    login(apiContext.axios, email, password)\n      .then((data) => {\n        authContext.setAuthenticated(true);\n        authContext.setAuth(data);\n        if (redirectTarget.startsWith(\"?continue=\")) {\n          router.push(redirectTarget.replace(\"?continue=\", \"\"));\n        } else {\n          router.push(\"/dashboard\");\n        }\n      })\n      .catch((e) => {\n        if (e instanceof ApiError) {\n          if (e.code === LoginStatus.INVALID_CREDS) {\n            setError(\"Email dan/atau kata sandi salah\");\n            return;\n          } else if (e.code === LoginStatus.EMAIL_NOT_CONFIRMED) {\n            setError(\"Email belum dikonfirmasi\");\n            return;\n          }\n\n          setError(e.message);\n        } else {\n          setError(e);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <AuthWrapper title=\"Login ke Dashboard\">\n      <Alert error={error} />\n      <form\n        onSubmit={(evt) => {\n          evt.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <InputField\n          name=\"Alamat Email\"\n          value={email}\n          setValue={setEmail}\n          placeholder=\"johndoe@email.com\"\n        />\n        <InputField\n          name=\"Kata Sandi\"\n          type=\"password\"\n          value={password}\n          setValue={setPassword}\n          placeholder=\"***********\"\n        />\n        <br />\n        <FilledButton text=\"LOGIN\" loading={loading} padding=\"0.75em 1.5em\" submit />\n        <p className=\"login-link mt-4 mb-0\">\n          Lupa kata sandi ?{\" \"}\n          <a href=\"/forget-password\">\n            <b>Reset</b>\n          </a>\n        </p>\n        <p className=\"login-link\">\n          Belum terdaftar ?{\" \"}\n          <a href=\"/register\">\n            <b>Daftar</b>\n          </a>\n        </p>\n      </form>\n      <style jsx>{`\n        .login-link {\n          color: #7446a1;\n        }\n\n        .login-link a {\n          color: #fe789a;\n        }\n      `}</style>\n    </AuthWrapper>\n  );\n};\n\nexport default LoginPage;\n","interface Props {\n  name: string,\n  type?: string,\n  value: string,\n  setValue: (newValue: string) => void,\n  placeholder: string\n}\n\nconst InputField: React.FC<Props> = ({ name, type = \"text\", value, setValue, placeholder }) => {\n\n  const id = name.toLowerCase().replace(/\\s/g, \"\");\n\n  return (\n    <div>\n      <label htmlFor={id}>{name}</label>\n      <input id={id} type={type} value={value} onChange={(evt) => { setValue(evt.target.value); }} placeholder={placeholder} />\n      <style jsx>{`\n        label {\n          font-style: normal;\n          font-weight: bold;\n          font-size: 1.4rem;\n          line-height: 1.2rem;\n          display: block;\n          color: #000000;\n          margin-top: 0.8rem;\n        }\n\n        input {\n          width: 100%;\n          border: none;\n          padding: 0.5rem 0 0.5rem 0;\n          border-bottom: 0.15rem solid black;\n          box-sizing: border-box;\n          background: none;\n          margin: 0.5rem 0 1rem 0;\n        }\n\n        input[type=\"text\"], input[type=\"password\"] {\n          font-size: 1.2rem;\n          font-style: normal;\n          font-weight: bold;\n        }\n\n        input:focus {\n          outline: none;\n        }\n\n        ::placeholder {\n          font-style: normal;\n          font-weight: bold;\n          font-size: 1.2rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default InputField;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/login\",\n      function () {\n        return require(\"private-next-pages/login.tsx\");\n      }\n    ]);\n  ","import { FileTaskParam } from \"interfaces/task\";\n\nexport function isValidEmail(email: string): boolean {\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport const isValidString = (string: string | null, max: number): boolean =>\n  String(string) !== null &&\n  String(string).length <= max &&\n  String(string).length > 0;\n\nexport const isValidDate = (date: string | null): boolean => {\n  if (String(date).length === 0 || date === null) return false;\n  const element = String(date).split(\"-\");\n  return parseInt(element[0]) < 2017;\n};\n\nexport const isValidPhone = (phone: string | null): boolean => {\n  if (!phone) return false;\n  const re = /^\\(?(?:\\+62|62|0)(?:\\d{2,3})?\\)?[ .-]?\\d{2,4}[ .-]?\\d{2,4}[ .-]?\\d{2,4}$/;\n  return re.test(phone);\n};\n\n\nexport const isEmpty = (string: string | null): boolean =>\n  string !== null && String(string).length === 0;\n\nexport const isValidFile = (\n  file: File,\n  widget: FileTaskParam\n): Promise<boolean> | boolean => {\n  const format = `.${file.type.split(\"/\").pop()}`;\n  const extensions = widget.fileExtension;\n\n  const allowAllFile = extensions.includes(\"*\");\n\n  if (!allowAllFile) {\n    if (format && !extensions.includes(format)) {\n      const fileExtensionText = extensions?.reduce(\n        (accumulator, extension, i) =>\n          `${accumulator}${i === 0 ? \"\" : \", \"}${extension}`\n      );\n      throw new Error(`File hanya boleh mengandung format ${fileExtensionText}.`);\n    }\n  }\n\n  const size = Math.ceil(file.size / 1024 / 1000);\n  const sizeConstraint = parseInt(widget.maxFileSize.split(\" \")[0]);\n  if (size > sizeConstraint) {\n    throw new Error(`File tidak boleh melebihi size ${widget.maxFileSize}.`);\n  }\n  return true;\n};\n"],"sourceRoot":""}