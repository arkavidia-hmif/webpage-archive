{"version":3,"sources":["webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://_N_E/./components/dashboard/preevent/PreeventSidebar.tsx","webpack://_N_E/./components/dashboard/preevent/PreeventStageTask.tsx","webpack://_N_E/./components/page/dashboard/PreEventWrapper.tsx","webpack://_N_E/./pages/dashboard/pre-events/[preevent]/index.tsx","webpack://_N_E/./components/dashboard/sidebar/SidebarItem.tsx","webpack://_N_E/./components/dashboard/sidebar/SidebarSection.tsx","webpack://_N_E/./components/dashboard/sidebar/DashboardSidebar.tsx","webpack://_N_E/./api/preevent.ts","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?983b","webpack://_N_E/./interfaces/preevent.ts"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","PreeventSidebar","registration","selection","setSelection","apiContext","useContext","ApiContext","useSWR","id","getPreeventRegistrationDetail","axios","registrationDetail","data","error","Alert","status","taskResponseById","filterAndGroupPreeventTaskResponse","getRequiredAndCompletedPreeventTask","DashboardSidebar","title","preevent","name","subtitle","taskResponse","registrationStage","stages","PreeventStageTask","registrationDetailError","registrationDetailMutate","mutate","Spinner","widgetList","widgetEnabled","stage","tasks","task","activeStageId","taskEnabled","response","submitFunction","submitPreeventTaskResponse","editable","PreEventWrapper","LIST_PREEVENT_REGISTRATION_URL","getPreeventRegistration","preeventRegistration","errorPreeventRegistration","useState","preeventSlug","useRouter","query","height","currentPreeventArr","filter","entry","slug","currentRegistration","className","PreeventIndex","Layout","background","Theme","bgColors","whtogr","DashboardWrapper","SidebarItem","index","onClick","src","image","text","SidebarSection","map","key","item","additionalSidebar","sidebarData","widget","param","widgetParameters","description","LIST_PREEVENT_URL","getPreevent","a","get","then","ApiError","StandardError","ERROR","message","registerPreevent","preeventId","post","errorCode","code","PreeventRegisterStatus","CLOSED","detail","ALREADY_REGISTERED","PROFILE_INCOMPLETE","registrationId","taskId","window","__NEXT_P"],"mappings":"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","file":"static/chunks/pages/dashboard/pre-events/[preevent]-7c1aad1ee9d5f27a7d59.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useContext } from \"react\";\nimport useSWR from \"swr\";\nimport DashboardSidebar from \"../sidebar/DashboardSidebar\";\nimport { ApiContext } from \"utils/context/api\";\nimport Alert from \"components/Alert\";\nimport { filterAndGroupPreeventTaskResponse, getRequiredAndCompletedPreeventTask } from \"utils/transformer/task\";\nimport { PreeventRegistration } from \"interfaces/preevent\";\nimport { getPreeventRegistrationDetail } from \"api/preevent\";\n\ninterface Props {\n  registration: PreeventRegistration;\n  selection: number;\n  setSelection: (selection: number) => void;\n}\n\nconst PreeventSidebar: React.FC<Props> = ({\n  registration,\n  selection,\n  setSelection,\n}) => {\n  const apiContext = useContext(ApiContext);\n\n  const {\n    data: registrationDetail,\n    error: registrationDetailError,\n  } = useSWR(`/preevent/registrants/${registration.id}/`, () =>\n    getPreeventRegistrationDetail(apiContext.axios, registration.id)\n  );\n\n  if (registrationDetailError) return <Alert error=\"Masalah koneksi\" />;\n\n\n  // Status\n  let status = \"\";\n  let taskResponseById = {};\n\n  if (registrationDetail) {\n    taskResponseById = filterAndGroupPreeventTaskResponse(registrationDetail);\n\n    const [requiredTaskCount, completedTaskCount] = getRequiredAndCompletedPreeventTask(registrationDetail);\n    if (requiredTaskCount === completedTaskCount) {\n      status = \"Pendaftaran sukses, silahkan tunggu pengumuman lebih lanjut\";\n    } else {\n      status = \"Data belum lengkap/diverifikasi\";\n    }\n  }\n\n  return (\n    <DashboardSidebar\n      title={registration.preevent.name}\n      subtitle={\"\"}\n      status={status}\n      taskResponse={taskResponseById}\n      registrationStage={registrationDetail?.stages || []}\n      selection={selection}\n      setSelection={setSelection}\n    />\n  );\n};\n\nexport default PreeventSidebar;\n","import { useContext } from \"react\";\nimport useSWR from \"swr\";\nimport StageTask from \"../stagetask\";\nimport Alert from \"components/Alert\";\nimport Spinner from \"components/Spinner\";\nimport { Task } from \"interfaces/task\";\nimport { ApiContext } from \"utils/context/api\";\nimport { filterAndGroupPreeventTaskResponse } from \"utils/transformer/task\";\nimport { PreeventRegistration } from \"interfaces/preevent\";\nimport { getPreeventRegistrationDetail, submitPreeventTaskResponse } from \"api/preevent\";\n\ninterface Props {\n  registration: PreeventRegistration;\n  selection: number;\n}\n\nconst PreeventStageTask: React.FC<Props> = ({ registration, selection }) => {\n  const apiContext = useContext(ApiContext);\n\n  const {\n    data: registrationDetail,\n    error: registrationDetailError,\n    mutate: registrationDetailMutate,\n  } = useSWR(`/preevent/registrants/${registration.id}/`, () =>\n    getPreeventRegistrationDetail(apiContext.axios, registration.id)\n  );\n\n  if (registrationDetailError) return <Alert error=\"Masalah koneksi\" />;\n  if (!registrationDetail) return <Spinner />;\n\n  const widgetList: Array<Task> = [];\n  const widgetEnabled: Array<boolean> = [];\n  for (const stage of registrationDetail.stages) {\n    for (const task of stage.tasks) {\n      widgetList.push(task);\n      widgetEnabled.push(stage.id === registrationDetail.activeStageId);\n    }\n  }\n\n  const taskResponseById = filterAndGroupPreeventTaskResponse(\n    registrationDetail\n  );\n\n  const task = widgetList[selection];\n  const taskEnabled = widgetEnabled[selection];\n\n  const taskResponseFunction =\n    (value: string) => submitPreeventTaskResponse(\n      apiContext.axios,\n      registration.id,\n      task.id,\n      value\n    );\n\n\n  return (<StageTask\n    mutate={registrationDetailMutate}\n    selection={selection}\n    task={task}\n    response={taskResponseById[task.id]}\n    submitFunction={taskResponseFunction}\n    editable={taskEnabled}\n  />);\n};\n\nexport default PreeventStageTask;","import { useContext, useState } from \"react\";\nimport { useRouter } from \"next/dist/client/router\";\nimport useSWR from \"swr\";\nimport { ApiContext } from \"utils/context/api\";\nimport Alert from \"components/Alert\";\nimport Spinner from \"components/Spinner\";\nimport { getPreeventRegistration, LIST_PREEVENT_REGISTRATION_URL } from \"api/preevent\";\nimport PreeventSidebar from \"components/dashboard/preevent/PreeventSidebar\";\nimport PreeventStageTask from \"components/dashboard/preevent/PreeventStageTask\";\n\nconst PreEventWrapper: React.FC = () => {\n  const apiContext = useContext(ApiContext);\n\n  const {\n    data: preeventRegistration,\n    error: errorPreeventRegistration\n  } = useSWR(LIST_PREEVENT_REGISTRATION_URL, () => getPreeventRegistration(apiContext.axios));\n\n  const [selection, setSelection] = useState(0);\n\n  const router = useRouter();\n\n  const { preevent: preeventSlug } = router.query;\n  if (!preeventSlug) return null;\n\n  if (errorPreeventRegistration) return <Alert error=\"Masalah koneksi\" />;\n  if (!preeventRegistration) return <Spinner height=\"200px\" />;\n\n  const currentPreeventArr = preeventRegistration.filter(entry => entry.preevent.slug === preeventSlug);\n\n  if (currentPreeventArr.length !== 1) {\n    return <Alert error=\"Tautan invalid, pastikan pendaftaran sudah dibuka dan profil sudah lengkap\" />;\n  }\n\n  const currentRegistration = currentPreeventArr[0];\n\n  const getComponent = () => {\n    return <PreeventStageTask registration={currentRegistration} selection={selection} />;\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"row\" id=\"main-content\">\n        <div className=\"col-lg-3 col-md-4\">\n          <PreeventSidebar\n            registration={currentRegistration}\n            selection={selection}\n            setSelection={setSelection}\n          />\n        </div>\n        <div className=\"col-lg-6 col-md-6 mt-5 mt-md-0\">{getComponent()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PreEventWrapper;\n","import Layout from \"components/Layout\";\nimport DashboardWrapper from \"components/dashboard/DashboardWrapper\";\nimport { Theme } from \"styles/theme\";\nimport PreEventWrapper from \"components/page/dashboard/PreEventWrapper\";\n\nconst PreeventIndex: React.FC = () => {\n  return (\n    <Layout title=\"Informasi Pre-Events\" background={Theme.bgColors.whtogr}>\n      <DashboardWrapper>\n        <PreEventWrapper />\n      </DashboardWrapper>\n    </Layout>\n  );\n};\n\nexport default PreeventIndex;\n","import { SidebarEntry } from \"interfaces/sidebar\";\n\ninterface Props {\n  entry: SidebarEntry;\n  index: number;\n  selection: number;\n  setSelection: (value: number) => void;\n}\n\nconst SidebarItem: React.FC<Props> = ({\n  entry,\n  index,\n  selection,\n  setSelection,\n}) => {\n  return (\n    <a>\n      <li\n        onClick={() => setSelection(index)}\n        className={selection === index ? \"active\" : \"\"}\n      >\n        {selection === index && <span id=\"right-roller\"></span>}\n        <img src={entry.image} className=\"mr-3\" />\n        <p>{entry.text}</p>\n      </li>\n      <style jsx>{`\n        a {\n          text-decoration: none;\n        }\n\n        img {\n          width: 1rem;\n          height: 1rem;\n        }\n\n        li {\n          color: #161f24;\n          cursor: pointer;\n          padding: 0.5rem;\n          padding-right: 0rem;\n          position: relative;\n          font-size: 0.875rem;\n\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n\n        li p {\n          margin: 0;\n          line-height: 1.5rem;\n        }\n\n        li.active {\n          background: rgba(251, 188, 200, 0.3);\n          margin: 0 -10px 0 -15px;\n          padding: 0.5rem calc(0.5rem + 15px);\n          padding-right: 0rem;\n        }\n\n        #right-roller {\n          position: absolute;\n          background: #fe94ab;\n          opacity: 0.5;\n          border-radius: 10px;\n          width: 10px;\n          height: 100%;\n          top: 0;\n          right: -5px;\n        }\n      `}</style>\n    </a>\n  );\n};\n\nexport default SidebarItem;\n","import { Fragment } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport { SidebarGroup } from \"interfaces/sidebar\";\n\ninterface Props {\n  selection: number;\n  setSelection: (value: number) => void;\n  data: SidebarGroup[];\n}\n\nconst SidebarSection: React.FC<Props> = ({ data, selection, setSelection }) => {\n  let i = -1;\n  return (\n    <>\n      {data.map((entry) => {\n        return (\n          <Fragment key={entry.name}>\n            <div className=\"not-dropdown\">\n              <div className=\"title\">{entry.name}</div>\n            </div>\n            <div className=\"dropdown\">\n              <ul className=\"list\">\n                {entry.item.map((item) => {\n                  i += 1;\n                  return (\n                    <SidebarItem\n                      key={i}\n                      entry={item}\n                      index={i}\n                      selection={selection}\n                      setSelection={setSelection}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n            <style jsx>{`\n              ul {\n                list-style: none;\n              }\n              .dropdown {\n                padding: 0;\n              }\n              .list {\n                padding: 0;\n              }\n              .title {\n                color: rgba(0, 0, 0, 0.6);\n                font-size: 1.2rem;\n                line-height: 1.4rem;\n              }\n            `}</style>\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SidebarSection;\n","import SidebarSection from \"./SidebarSection\";\nimport { SidebarGroup } from \"interfaces/sidebar\";\nimport { Stage, TaskResponse } from \"interfaces/task\";\n\ninterface SubmissionProgressProps {\n  title: string;\n  subtitle: string;\n  status: string;\n  registrationStage: Array<Stage>;\n  taskResponse: Record<string, TaskResponse>;\n  additionalSidebar?: Array<SidebarGroup>;\n  selection: number;\n  setSelection: (selection: number) => void;\n}\n\nconst DashboardSidebar: React.FC<SubmissionProgressProps> = ({\n  title,\n  subtitle,\n  status,\n  taskResponse,\n  registrationStage,\n  additionalSidebar = [],\n  selection,\n  setSelection,\n}) => {\n  const sidebarData = [...additionalSidebar];\n\n  const getImageSidebar = (response?: TaskResponse): string => {\n    if (!response) return \"/img/dashboard/submission/empty.svg\";\n\n    if (response.status === \"completed\") return \"/img/dashboard/submission/check.svg\";\n    if (response.status === \"awaiting_validation\") return \"/img/dashboard/submission/waiting.svg\";\n    if (response.status === \"rejected\") return \"/img/dashboard/submission/cross.svg\";\n\n    return \"/img/dashboard/submission/cross.svg\";\n  };\n\n  for (const stage of registrationStage) {\n    const item = [];\n    for (const task of stage.tasks) {\n      item.push({\n        text: task.name,\n        widget: task.widget,\n        image: getImageSidebar(taskResponse[task.id]),\n        param:\n          typeof task.widgetParameters === \"string\"\n            ? task.widgetParameters\n            : task.widgetParameters.description,\n      });\n    }\n    sidebarData.push({\n      name: stage.name,\n      item,\n    });\n  }\n\n  return (\n    <div className=\"container mb-3 card\">\n      <h2>{title}</h2>\n      <p className=\"\">{subtitle}</p>\n      <p>Status : {status}</p>\n      <SidebarSection\n        data={sidebarData}\n        selection={selection}\n        setSelection={setSelection}\n      />\n      <style jsx>{`\n        h2 {\n          margin-bottom: 0;\n          margin-top: 1rem;\n          font-size: 1.5rem;\n          line-height: 31px;\n        }\n\n        p {\n          font-size: 0.8rem;\n        }\n\n        .card {\n          background: linear-gradient(180deg, #ffffff 0%, #f3a9dd 100%);\n          border: 0.1rem solid #05058d;\n          box-sizing: border-box;\n          border-radius: 10px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default DashboardSidebar;\n","import { AxiosError, AxiosInstance } from \"axios\";\nimport { Preevent, PreeventRegistration, PreeventRegisterStatus, PreeventRegistrationDetail } from \"interfaces/preevent\";\nimport { ApiError, StandardError } from \"interfaces/api\";\nimport { PreeventTaskResponse } from \"interfaces/task\";\n\nexport const LIST_PREEVENT_URL = \"/preevent/\";\nexport const LIST_PREEVENT_REGISTRATION_URL = \"/preevent/registrants/\";\nexport const PREEVENT_REGISTRATION_URL = \"/preevent/register/\";\n\nexport const getPreevent = async (\n  axios: AxiosInstance\n): Promise<Array<Preevent>> => {\n  return axios\n    .get<Array<Preevent>>(LIST_PREEVENT_URL)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const registerPreevent = async (\n  axios: AxiosInstance,\n  preeventId: number\n): Promise<PreeventRegistration> => {\n  return axios\n    .post<PreeventRegistration>(PREEVENT_REGISTRATION_URL, {\n      preeventId\n    }).then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      if (error.response) {\n        const errorCode = error.response.data.code;\n        if (errorCode === \"create_registrant_fail\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ERROR, \"Gagal mendaftar, harap coba lagi dan hubungi pantitia jika gagal kembali\");\n        } else if (errorCode === \"preevent_registration_closed\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.CLOSED, error.response.data.detail);\n        } else if (errorCode === \"preevent_already_registered\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ALREADY_REGISTERED, error.response.data.detail);\n        } else if (errorCode === \"profile_incomplete\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.PROFILE_INCOMPLETE, error.response.data.detail);\n        }\n      }\n\n      throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ERROR, error.message);\n    });\n};\n\nexport const getPreeventRegistration = async (\n  axios: AxiosInstance\n): Promise<Array<PreeventRegistration>> => {\n  return axios\n    .get<Array<PreeventRegistration>>(LIST_PREEVENT_REGISTRATION_URL)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const getPreeventRegistrationDetail = async (\n  axios: AxiosInstance,\n  registrationId: number\n): Promise<PreeventRegistrationDetail> => {\n  return axios\n    .get<PreeventRegistrationDetail>(`/preevent/registrants/${registrationId}/`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const submitPreeventTaskResponse = async (\n  axios: AxiosInstance,\n  registrationId: number,\n  taskId: number,\n  value: string\n): Promise<PreeventTaskResponse> => {\n  return axios\n    .post<PreeventTaskResponse>(\n      `/preevent/registrants/${registrationId}/tasks/${taskId}/`,\n      { response: value })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/dashboard/pre-events/[preevent]\",\n      function () {\n        return require(\"private-next-pages/dashboard/pre-events/[preevent]/index.tsx\");\n      }\n    ]);\n  ","import { UserData } from \"./auth\";\nimport { PreeventTaskResponse, Task } from \"./task\";\n\nexport interface Preevent {\n  id: number;\n  name: string;\n  subtitle: string;\n  slug: string;\n  isRegistrationOpen: boolean;\n}\n\nexport interface Stage {\n  id: number;\n  name: string;\n  order: number;\n  tasks: Array<Task>;\n}\n\nexport interface PreeventRegistration {\n  id: number;\n  preevent: Preevent;\n  user: UserData;\n  isParticipating: boolean;\n  category: string;\n}\n\nexport interface PreeventRegistrationDetail extends PreeventRegistration {\n  stages: Array<Stage>;\n  taskResponses: Array<PreeventTaskResponse>;\n  createdAt: string;\n  activeStageId: number;\n}\n\nexport enum PreeventRegisterStatus {\n  ERROR,\n  CLOSED,\n  ALREADY_REGISTERED,\n  PROFILE_INCOMPLETE,\n  FULL\n}"],"sourceRoot":""}