{"version":3,"sources":["webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://_N_E/./pages/dashboard/pre-events/academy/register.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?5aa4","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://_N_E/./api/preevent.ts","webpack://_N_E/./interfaces/preevent.ts","webpack://_N_E/./components/page/dashboard/PreEventPage.tsx","webpack://_N_E/./utils/transformer/preevent.ts"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","AcademyIndex","title","background","Theme","bgColors","whtogr","academy","window","__NEXT_P","push","_arrayLikeToArray","len","length","i","arr2","LIST_PREEVENT_URL","LIST_PREEVENT_REGISTRATION_URL","getPreevent","axios","a","get","then","response","data","error","ApiError","StandardError","ERROR","message","registerPreevent","preeventId","post","errorCode","code","PreeventRegisterStatus","CLOSED","detail","ALREADY_REGISTERED","PROFILE_INCOMPLETE","getPreeventRegistration","getPreeventRegistrationDetail","registrationId","submitPreeventTaskResponse","taskId","value","PreEventPage","baseUrl","apiContext","useContext","ApiContext","authContext","AuthContext","useSWR","preevent","errorPreevent","registration","errorRegistration","Alert","Spinner","height","allPreevent","filteredPreevent","filter","entry","slug","startsWith","academyPreevent","academyEntry","id","subtitle","isRegistrationOpen","some","groupedRegistration","output","forEach","groupRegistrationByPreeventSlug","generateCardText","isParticipating","generateUrl","auth","user","currentEducation","style","textAlign","className","map","index","DashboardCard","key","body","buttonLink","buttonText"],"mappings":"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","file":"static/chunks/pages/dashboard/pre-events/academy/register-0ba56461bac5b28bb72d.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import DashboardWrapper from \"components/dashboard/DashboardWrapper\";\nimport Layout from \"components/Layout\";\nimport { Theme } from \"styles/theme\";\nimport PreEventPage from \"components/page/dashboard/PreEventPage\";\n\nconst AcademyIndex: React.FC = () => (\n  <Layout title=\"Academy\" background={Theme.bgColors.whtogr}>\n    <DashboardWrapper>\n      <PreEventPage academy />\n    </DashboardWrapper>\n  </Layout>\n);\n\nexport default AcademyIndex;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/dashboard/pre-events/academy/register\",\n      function () {\n        return require(\"private-next-pages/dashboard/pre-events/academy/register.tsx\");\n      }\n    ]);\n  ","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import { AxiosError, AxiosInstance } from \"axios\";\nimport { Preevent, PreeventRegistration, PreeventRegisterStatus, PreeventRegistrationDetail } from \"interfaces/preevent\";\nimport { ApiError, StandardError } from \"interfaces/api\";\nimport { PreeventTaskResponse } from \"interfaces/task\";\n\nexport const LIST_PREEVENT_URL = \"/preevent/\";\nexport const LIST_PREEVENT_REGISTRATION_URL = \"/preevent/registrants/\";\nexport const PREEVENT_REGISTRATION_URL = \"/preevent/register/\";\n\nexport const getPreevent = async (\n  axios: AxiosInstance\n): Promise<Array<Preevent>> => {\n  return axios\n    .get<Array<Preevent>>(LIST_PREEVENT_URL)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const registerPreevent = async (\n  axios: AxiosInstance,\n  preeventId: number\n): Promise<PreeventRegistration> => {\n  return axios\n    .post<PreeventRegistration>(PREEVENT_REGISTRATION_URL, {\n      preeventId\n    }).then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      if (error.response) {\n        const errorCode = error.response.data.code;\n        if (errorCode === \"create_registrant_fail\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ERROR, \"Gagal mendaftar, harap coba lagi dan hubungi pantitia jika gagal kembali\");\n        } else if (errorCode === \"preevent_registration_closed\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.CLOSED, error.response.data.detail);\n        } else if (errorCode === \"preevent_already_registered\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ALREADY_REGISTERED, error.response.data.detail);\n        } else if (errorCode === \"profile_incomplete\") {\n          throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.PROFILE_INCOMPLETE, error.response.data.detail);\n        }\n      }\n\n      throw new ApiError<PreeventRegisterStatus>(PreeventRegisterStatus.ERROR, error.message);\n    });\n};\n\nexport const getPreeventRegistration = async (\n  axios: AxiosInstance\n): Promise<Array<PreeventRegistration>> => {\n  return axios\n    .get<Array<PreeventRegistration>>(LIST_PREEVENT_REGISTRATION_URL)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const getPreeventRegistrationDetail = async (\n  axios: AxiosInstance,\n  registrationId: number\n): Promise<PreeventRegistrationDetail> => {\n  return axios\n    .get<PreeventRegistrationDetail>(`/preevent/registrants/${registrationId}/`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};\n\nexport const submitPreeventTaskResponse = async (\n  axios: AxiosInstance,\n  registrationId: number,\n  taskId: number,\n  value: string\n): Promise<PreeventTaskResponse> => {\n  return axios\n    .post<PreeventTaskResponse>(\n      `/preevent/registrants/${registrationId}/tasks/${taskId}/`,\n      { response: value })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error: AxiosError) => {\n      throw new ApiError<StandardError>(StandardError.ERROR, error.message);\n    });\n};","import { UserData } from \"./auth\";\nimport { PreeventTaskResponse, Task } from \"./task\";\n\nexport interface Preevent {\n  id: number;\n  name: string;\n  subtitle: string;\n  slug: string;\n  isRegistrationOpen: boolean;\n}\n\nexport interface Stage {\n  id: number;\n  name: string;\n  order: number;\n  tasks: Array<Task>;\n}\n\nexport interface PreeventRegistration {\n  id: number;\n  preevent: Preevent;\n  user: UserData;\n  isParticipating: boolean;\n  category: string;\n}\n\nexport interface PreeventRegistrationDetail extends PreeventRegistration {\n  stages: Array<Stage>;\n  taskResponses: Array<PreeventTaskResponse>;\n  createdAt: string;\n  activeStageId: number;\n}\n\nexport enum PreeventRegisterStatus {\n  ERROR,\n  CLOSED,\n  ALREADY_REGISTERED,\n  PROFILE_INCOMPLETE,\n  FULL\n}","import { useContext } from \"react\";\nimport useSWR from \"swr\";\nimport {\n  getPreevent,\n  getPreeventRegistration,\n  LIST_PREEVENT_REGISTRATION_URL,\n  LIST_PREEVENT_URL,\n} from \"api/preevent\";\nimport { ApiContext } from \"utils/context/api\";\nimport DashboardCard from \"components/dashboard/DashboardCard\";\nimport { Preevent } from \"interfaces/preevent\";\nimport Alert from \"components/Alert\";\nimport Spinner from \"components/Spinner\";\nimport { groupRegistrationByPreeventSlug } from \"utils/transformer/preevent\";\nimport { AuthContext } from \"utils/context/auth\";\n\ninterface Props {\n  academy?: boolean\n}\n\nconst PreEventPage: React.FC<Props> = ({ academy = false }) => {\n  const baseUrl = \"/dashboard/pre-events/\";\n\n  const apiContext = useContext(ApiContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    data: preevent,\n    error: errorPreevent,\n  } = useSWR(LIST_PREEVENT_URL, () => getPreevent(apiContext.axios));\n  const { data: registration, error: errorRegistration } = useSWR(LIST_PREEVENT_REGISTRATION_URL, () => getPreeventRegistration(apiContext.axios));\n\n  if (errorPreevent || errorRegistration) return <Alert error=\"Masalah koneksi\" />;\n  if (!(preevent && registration)) return <Spinner height=\"200px\" />;\n\n  const filteredPreevent = preevent.filter(entry => !entry.slug.startsWith(\"academy\"));\n  const academyPreevent = preevent.filter(entry => entry.slug.startsWith(\"academy\"));\n  const academyOpen = academyPreevent.some(entry => entry.isRegistrationOpen);\n\n  const academyEntry: Preevent = {\n    id: -1,\n    name: \"Arkavidia Academy\",\n    slug: \"academy\",\n    subtitle: \"Untuk mahasiswa\",\n    isRegistrationOpen: academyOpen,\n  };\n\n  let allPreevent;\n\n  if (academy) {\n    allPreevent = [\n      ...academyPreevent\n    ];\n  } else {\n    allPreevent = [\n      ...filteredPreevent,\n      academyEntry\n    ];\n  }\n\n\n  const groupedRegistration = groupRegistrationByPreeventSlug(registration);\n\n  const generateCardBody = (subtitle: string): string => {\n    return subtitle;\n  };\n\n  const generateCardText = (entry: Preevent): string => {\n    if (!entry.isRegistrationOpen) {\n      return \"Pendaftaran ditutup\";\n    } else {\n      if (groupedRegistration[entry.slug] && groupedRegistration[entry.slug].isParticipating) {\n        return \"Lihat pendaftaran\";\n      } else {\n        return \"Daftar\";\n      }\n    }\n  };\n\n  const generateUrl = (entry: Preevent): string => {\n    if (groupedRegistration[entry.slug] && groupedRegistration[entry.slug].isParticipating) {\n      return `${baseUrl}${entry.slug}`;\n    } else {\n      return `${baseUrl}${entry.slug}/register`;\n    }\n  };\n\n  if (authContext.auth && !authContext.auth.user.currentEducation) {\n    return (\n      <p style={{ textAlign: \"center\" }}>\n        Harap melengkapi profil terlebih dahulu\n      </p>\n    );\n  }\n\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"row\">\n        {allPreevent.map((entry, index) => (\n          <DashboardCard\n            key={index}\n            className=\"col-md-6 col-lg-4\"\n            title={entry.name}\n            body={generateCardBody(entry.subtitle)}\n            buttonLink={\n              entry.isRegistrationOpen ? generateUrl(entry) : null\n            }\n            buttonText={generateCardText(entry)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PreEventPage;\n","import { PreeventRegistration } from \"interfaces/preevent\";\n\nexport function groupRegistrationByPreeventSlug(\n  response: Array<PreeventRegistration>\n): Record<string, PreeventRegistration> {\n  const output: Record<string, PreeventRegistration> = {};\n\n  response.forEach((entry) => {\n    output[entry.preevent.slug] = entry;\n  });\n\n  return output;\n}\n"],"sourceRoot":""}