{"version":3,"sources":["webpack://_N_E/./components/auth/InputField.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?89b5","webpack://_N_E/./utils/validator.ts","webpack://_N_E/./pages/forget-password.tsx"],"names":["InputField","name","type","value","setValue","placeholder","id","toLowerCase","replace","htmlFor","onChange","evt","target","window","__NEXT_P","push","isValidEmail","email","test","String","isValidString","string","max","length","isValidDate","date","element","split","parseInt","isValidPhone","phone","isEmpty","isValidFile","file","widget","format","pop","extensions","fileExtension","includes","fileExtensionText","reduce","accumulator","extension","i","Error","Math","ceil","size","maxFileSize","LoginPage","useState","setEmail","loading","setLoading","error","setError","success","setSuccess","apiContext","useContext","ApiContext","title","href","text","padding","onSubmit","preventDefault","requestResetPassword","axios","then","err","message","submit"],"mappings":"uKAyDeA,IAjDqB,SAAC,GAA0D,IAAxDC,EAAwD,EAAxDA,KAAwD,IAAlDC,YAAkD,MAA3C,OAA2C,EAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAErEC,EAAKL,EAAKM,cAAcC,QAAQ,MAAO,IAE7C,OACE,qCACE,WAAOC,QAASH,EAAhB,4BAAqBL,GACrB,WAAOK,GAAIA,EAAIJ,KAAMA,EAAMC,MAAOA,EAAOO,SAAU,SAACC,GAAUP,EAASO,EAAIC,OAAOT,QAAWE,YAAaA,EAA1G,6BAFF,i3B,sBCZCQ,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,mBACA,WACE,OAAO,EAAQ,Y,kCCFhB,SAASC,EAAaC,GAG3B,MADW,0JACDC,KAAKC,OAAOF,GAAOV,eAH/B,4MAMO,IAAMa,EAAgB,SAACC,EAAuBC,GAAxB,OACR,OAAnBH,OAAOE,IACPF,OAAOE,GAAQE,QAAUD,GACzBH,OAAOE,GAAQE,OAAS,GAEbC,EAAc,SAACC,GAC1B,GAA4B,IAAxBN,OAAOM,GAAMF,QAAyB,OAATE,EAAe,OAAO,EACvD,IAAMC,EAAUP,OAAOM,GAAME,MAAM,KACnC,OAAOC,SAASF,EAAQ,IAAM,MAGnBG,EAAe,SAACC,GAC3B,IAAKA,EAAO,OAAO,EAEnB,MADW,2EACDZ,KAAKY,IAIJC,EAAU,SAACV,GAAD,OACV,OAAXA,GAA6C,IAA1BF,OAAOE,GAAQE,QAEvBS,EAAc,SACzBC,EACAC,GAEA,IAAMC,EAAS,IAAH,OAAOF,EAAK/B,KAAKyB,MAAM,KAAKS,OAClCC,EAAaH,EAAOI,cAI1B,IAFqBD,EAAWE,SAAS,MAGnCJ,IAAWE,EAAWE,SAASJ,GAAS,CAC1C,IAAMK,EAAiB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAYI,QACpC,SAACC,EAAaC,EAAWC,GAAzB,gBACKF,GADL,OACyB,IAANE,EAAU,GAAK,MADlC,OACyCD,MAE3C,MAAM,IAAIE,MAAJ,6CAAgDL,EAAhD,MAMV,GAFaM,KAAKC,KAAKd,EAAKe,KAAO,KAAO,KACnBpB,SAASM,EAAOe,YAAYtB,MAAM,KAAK,IAE5D,MAAM,IAAIkB,MAAJ,yCAA4CX,EAAOe,YAAnD,MAER,OAAO,I,oNCoCMC,UA/Ea,WAAM,MACNC,mBAAS,IAA5BlC,EADyB,KAClBmC,EADkB,OAEFD,oBAAS,GAAhCE,EAFyB,KAEhBC,EAFgB,OAGNH,mBAAwB,MAA3CI,EAHyB,KAGlBC,EAHkB,OAIFL,oBAAS,GAAhCM,EAJyB,KAIhBC,EAJgB,KAM1BC,EAAaC,qBAAWC,KAwB9B,OACE,EAAC,IAAD,CAAaC,MAAM,mBACfL,EA6BA,oBACE,4GAGA,EAAC,IAAD,CAAMM,KAAK,UACT,EAAC,IAAD,CAAcC,KAAK,mBAAmBC,QAAQ,mBAjClD,oBACE,EAAC,IAAD,CAAOV,MAAOA,IACd,gIAIA,UACEW,SAAU,SAACvD,GACTA,EAAIwD,iBAhCdX,EAAS,MAEJxC,YAAaC,IAKlBqC,GAAW,GAEXc,YAAqBT,EAAWU,MAAOpD,GACpCqD,MAAK,WACJZ,GAAW,MAFf,OAIS,SAACa,GACNf,EAASe,EAAIC,YALjB,SAOW,WACPlB,GAAW,OAdbE,EAAS,yBA2BL,4BAME,EAAC,IAAD,CACEvD,KAAK,eACLE,MAAOc,EACPb,SAAUgD,EACV/C,YAAY,sBAEd,qCACA,EAAC,IAAD,CACE2D,KAAK,QACLX,QAASA,EACTY,QAAQ,eACRQ,QAAM,MAzBhB,kE","file":"static/chunks/pages/forget-password-c9b960bc751ae4621a7d.js","sourcesContent":["interface Props {\n  name: string,\n  type?: string,\n  value: string,\n  setValue: (newValue: string) => void,\n  placeholder: string\n}\n\nconst InputField: React.FC<Props> = ({ name, type = \"text\", value, setValue, placeholder }) => {\n\n  const id = name.toLowerCase().replace(/\\s/g, \"\");\n\n  return (\n    <div>\n      <label htmlFor={id}>{name}</label>\n      <input id={id} type={type} value={value} onChange={(evt) => { setValue(evt.target.value); }} placeholder={placeholder} />\n      <style jsx>{`\n        label {\n          font-style: normal;\n          font-weight: bold;\n          font-size: 1.4rem;\n          line-height: 1.2rem;\n          display: block;\n          color: #000000;\n          margin-top: 0.8rem;\n        }\n\n        input {\n          width: 100%;\n          border: none;\n          padding: 0.5rem 0 0.5rem 0;\n          border-bottom: 0.15rem solid black;\n          box-sizing: border-box;\n          background: none;\n          margin: 0.5rem 0 1rem 0;\n        }\n\n        input[type=\"text\"], input[type=\"password\"] {\n          font-size: 1.2rem;\n          font-style: normal;\n          font-weight: bold;\n        }\n\n        input:focus {\n          outline: none;\n        }\n\n        ::placeholder {\n          font-style: normal;\n          font-weight: bold;\n          font-size: 1.2rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default InputField;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/forget-password\",\n      function () {\n        return require(\"private-next-pages/forget-password.tsx\");\n      }\n    ]);\n  ","import { FileTaskParam } from \"interfaces/task\";\n\nexport function isValidEmail(email: string): boolean {\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport const isValidString = (string: string | null, max: number): boolean =>\n  String(string) !== null &&\n  String(string).length <= max &&\n  String(string).length > 0;\n\nexport const isValidDate = (date: string | null): boolean => {\n  if (String(date).length === 0 || date === null) return false;\n  const element = String(date).split(\"-\");\n  return parseInt(element[0]) < 2017;\n};\n\nexport const isValidPhone = (phone: string | null): boolean => {\n  if (!phone) return false;\n  const re = /^\\(?(?:\\+62|62|0)(?:\\d{2,3})?\\)?[ .-]?\\d{2,4}[ .-]?\\d{2,4}[ .-]?\\d{2,4}$/;\n  return re.test(phone);\n};\n\n\nexport const isEmpty = (string: string | null): boolean =>\n  string !== null && String(string).length === 0;\n\nexport const isValidFile = (\n  file: File,\n  widget: FileTaskParam\n): Promise<boolean> | boolean => {\n  const format = `.${file.type.split(\"/\").pop()}`;\n  const extensions = widget.fileExtension;\n\n  const allowAllFile = extensions.includes(\"*\");\n\n  if (!allowAllFile) {\n    if (format && !extensions.includes(format)) {\n      const fileExtensionText = extensions?.reduce(\n        (accumulator, extension, i) =>\n          `${accumulator}${i === 0 ? \"\" : \", \"}${extension}`\n      );\n      throw new Error(`File hanya boleh mengandung format ${fileExtensionText}.`);\n    }\n  }\n\n  const size = Math.ceil(file.size / 1024 / 1000);\n  const sizeConstraint = parseInt(widget.maxFileSize.split(\" \")[0]);\n  if (size > sizeConstraint) {\n    throw new Error(`File tidak boleh melebihi size ${widget.maxFileSize}.`);\n  }\n  return true;\n};\n","import Link from \"next/link\";\nimport { useContext, useState } from \"react\";\nimport { requestResetPassword } from \"../api/auth\";\nimport Alert from \"../components/Alert\";\nimport AuthWrapper from \"../components/auth/AuthWrapper\";\nimport InputField from \"../components/auth/InputField\";\nimport FilledButton from \"../components/FilledButton\";\nimport { ApiContext } from \"../utils/context/api\";\nimport { isValidEmail } from \"../utils/validator\";\n\nconst LoginPage: React.FC = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  const apiContext = useContext(ApiContext);\n\n  const onSubmit = () => {\n    setError(null);\n\n    if (!isValidEmail(email)) {\n      setError(\"Alamat email invalid\");\n      return;\n    }\n\n    setLoading(true);\n\n    requestResetPassword(apiContext.axios, email)\n      .then(() => {\n        setSuccess(true);\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <AuthWrapper title=\"Lupa Kata Sandi\">\n      {!success ? (\n        <>\n          <Alert error={error} />\n          <p className=\"my-3 mb-4\">\n            Jangan khawatir, masukkan emailmu untuk mendapatkan tautan perubahan\n            kata sandi\n          </p>\n          <form\n            onSubmit={(evt) => {\n              evt.preventDefault();\n              onSubmit();\n            }}\n          >\n            <InputField\n              name=\"Alamat Email\"\n              value={email}\n              setValue={setEmail}\n              placeholder=\"johndoe@email.com\"\n            />\n            <br />\n            <FilledButton\n              text=\"KIRIM\"\n              loading={loading}\n              padding=\"0.75em 1.5em\"\n              submit\n            />\n          </form>\n        </>\n      ) : (\n        <>\n          <p className=\"my-3\">\n            Silahkan cek emailmu untuk menemukan tautan perubahan kata sandi\n          </p>\n          <Link href=\"/login\">\n            <FilledButton text=\"KEMBALI KE LOGIN\" padding=\"0.75em 1.5em\" />\n          </Link>\n        </>\n      )}\n      <style jsx>{`\n        p {\n          color: #7446a1;\n        }\n      `}</style>\n    </AuthWrapper>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}